var d=Object.defineProperty;var p=(a,t,e)=>t in a?d(a,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):a[t]=e;var n=(a,t,e)=>(p(a,typeof t!="symbol"?t+"":t,e),e);import{B as h,c as m}from"./component.decorator.a66a1cbe.js";import"./aframe-master.5ce7d00f.js";import"./test-helpers.473cda21.js";var u=Object.defineProperty,v=Object.getOwnPropertyDescriptor,M=(a,t,e,r)=>{for(var s=r>1?void 0:r?v(t,e):t,o=a.length-1,l;o>=0;o--)(l=a[o])&&(s=(r?l(t,e,s):l(s))||s);return r&&s&&u(t,e,s),s};const i=AFRAME.THREE;var c;let f=(c=class extends h{init(){this.el.addEventListener("object3dset",()=>{this.update()})}update(){const a=e=>{if(e instanceof i.Mesh){if(e.material instanceof i.Material)e.material.dispose();else for(const r of e.material)r.dispose();this.data.flat?e.material=new i.MeshBasicMaterial({color:new i.Color(this.data.color)}):e.material=new i.MeshStandardMaterial({color:new i.Color(this.data.color)})}},t=e=>{a(e);for(const r of e.children)t(r)};if(this.data.recursive)t(this.el.object3D);else for(const e in this.el.object3DMap){const r=this.el.object3DMap[e];a(r)}}},n(c,"schema",{color:{default:"black"},flat:{default:!0},recursive:{default:!0}}),c);f=M([m("material-override")],f);export{f as MaterialOverrideComponent};
