var m=Object.defineProperty;var p=(e,t,i)=>t in e?m(e,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[t]=i;var o=(e,t,i)=>(p(e,typeof t!="symbol"?t+"":t,i),i);import{d as A}from"./document.6adaffbf.js";import{B as E,c as y}from"./component.decorator.a66a1cbe.js";import"./aframe-master.5ce7d00f.js";import"./test-helpers.473cda21.js";var d=Object.defineProperty,R=Object.getOwnPropertyDescriptor,v=(e,t,i,s)=>{for(var n=s>1?void 0:s?R(t,i):t,a=e.length-1,c;a>=0;a--)(c=e[a])&&(n=(s?c(t,i,n):c(n))||n);return s&&n&&d(t,i,n),n};const r=AFRAME.THREE,l=AFRAME.ANIME;var u;let h=(u=class extends E{constructor(){super(...arguments);o(this,"toEntity");o(this,"isAtToEntity",!1);o(this,"currPositionAnimation");o(this,"currRotationAnimation");o(this,"initialPosition",new r.Vector3);o(this,"initialRotation",new r.Euler);o(this,"currPosition",new r.Vector3);o(this,"currRotation",new r.Euler)}init(){console.log("click move init"),this.initialPosition.copy(this.el.object3D.position),this.initialRotation.copy(this.el.object3D.rotation),this.currPosition.copy(this.initialPosition),this.currRotation.copy(this.initialRotation),this.el.setAttribute("geometry",{primitive:"sphere",radius:this.data.interactRadius}),this.el.setAttribute("material",{transparent:!0,opacity:0}),this.el.setAttribute("animation__mouseenter",{property:"scale",startEvents:"mouseenter",easing:"easeInCubic",dur:150,to:"1.1 1.1 1.1"}),this.el.setAttribute("animation__mouseleave",{property:"scale",startEvents:"mouseleave",easing:"easeInCubic",dur:150,to:"1 1 1"}),this.el.setAttribute("animation__click",{property:"scale",startEvents:"click",easing:"easeInCubic",dur:150,to:"1 1 1"}),this.el.classList.add("clickable"),this.el.addEventListener("click",()=>{if(!this.toEntity)return;(this.currPositionAnimation!=null&&!this.currPositionAnimation.completed||this.currRotationAnimation!=null&&!this.currRotationAnimation.completed)&&(l.remove(this.currPosition),l.remove(this.currRotation));const t=this.isAtToEntity?this.initialPosition:this.toEntity.object3D.position,i=this.isAtToEntity?this.initialRotation:this.toEntity.object3D.rotation;console.log("is at entity ",this.isAtToEntity," moving to ",t," init ",this.initialPosition," to entity ",this.toEntity.object3D.position),this.isAtToEntity=!this.isAtToEntity,this.currPositionAnimation=AFRAME.ANIME({targets:this.currPosition,x:t==null?void 0:t.x,y:t==null?void 0:t.y,z:t==null?void 0:t.z,easing:"easeInOutQuad",duration:1e3}),this.currRotationAnimation=AFRAME.ANIME({targets:this.currRotation,x:i.x,y:i.y,z:i.z,easing:"easeInOutQuad",duration:1e3})})}tick(){this.el.setAttribute("position",this.currPosition),this.el.setAttribute("rotation",this.currRotation)}update(){this.toEntity=A.querySelector(this.data.toEntity)}},o(u,"schema",{toEntity:{default:""},spinOnToEntity:{default:!1},interactRadius:{default:3}}),u);h=v([y("click-move")],h);export{h as ClickMoveComponent};
