var w=Object.defineProperty;var f=(r,e,t)=>e in r?w(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t;var n=(r,e,t)=>(f(r,typeof e!="symbol"?e+"":e,t),t);import{b as d}from"./aframe-master.5ce7d00f.js";import"./test-helpers.473cda21.js";import{s as v}from"./three.978d9ee7.js";var p;const y=(p=class{},n(p,"schema",{}),p);function A(r){const e=r.prototype,t={schema:r.schema},a=Object.getOwnPropertyNames(e);a.forEach(i=>{i!=="constructor"&&(t[i]=e[i])});const s=e.init;return t.init=function(){const i=new r;Object.getOwnPropertyNames(i).forEach(o=>{this[o]=i[o]}),a.forEach(o=>{const h=this[o];h._bindToAframe&&typeof h=="function"&&(this[o]=h.bind(this))}),s&&s.call(this)},t}function L(r){return function(e){d.registerSystem(r,A(e))}}var E=Object.defineProperty,b=Object.getOwnPropertyDescriptor,O=(r,e,t,a)=>{for(var s=a>1?void 0:a?b(e,t):e,i=r.length-1,c;i>=0;i--)(c=r[i])&&(s=(a?c(e,t,s):c(s))||s);return a&&s&&E(e,t,s),s};const l=AFRAME.THREE;var u;let m=(u=class extends y{constructor(){super(...arguments);n(this,"water");n(this,"camera");n(this,"plane");n(this,"underwater",!1);n(this,"currentWaterLevel",0);n(this,"waterLevelAnimation")}init(){var t;const e=this.el;this.water=e.querySelector("a-three-water")??void 0,this.camera=e.querySelector("[camera]")??void 0,this.plane=new l.Mesh(new l.PlaneGeometry(10,10),new l.MeshBasicMaterial({color:2573673,opacity:.5,transparent:!0,depthTest:!1})),v(this.plane,50),(t=this.camera)==null||t.setObject3D("tint",this.plane),this.plane.position.set(0,0,-.1),this.updateUnderwaterFX()}tick(e,t){if(!this.camera||!this.water)return;this.water.setAttribute("visible",this.currentWaterLevel>0),this.water.setAttribute("position",{x:0,y:this.currentWaterLevel,z:0});const a=this.currentWaterLevel>this.camera.getAttribute("position").y;a!=this.underwater&&(this.underwater=a,this.updateUnderwaterFX())}update(e){e.waterLevel!=this.data.waterLevel&&(this.waterLevelAnimation!=null&&this.waterLevelAnimation.completed&&AFRAME.ANIME.remove(this),this.waterLevelAnimation=AFRAME.ANIME({targets:this,currentWaterLevel:this.data.waterLevel,easing:"easeInOutQuad",duration:1e3}))}changeWaterLevel(e){}updateUnderwaterFX(){this.plane&&(this.plane.visible=this.underwater)}},n(u,"schema",{waterLevel:{default:-1}}),u);m=O([L("three-water-controller")],m);export{m as ThreeWaterControllerSystem};
