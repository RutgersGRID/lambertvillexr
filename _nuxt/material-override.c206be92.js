var f=Object.defineProperty;var p=(a,t,e)=>t in a?f(a,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):a[t]=e;var n=(a,t,e)=>(p(a,typeof t!="symbol"?t+"":t,e),e);import{B as h,c as m}from"./component.decorator.a66a1cbe.js";import"./aframe-master.5ce7d00f.js";import"./test-helpers.473cda21.js";var v=Object.defineProperty,u=Object.getOwnPropertyDescriptor,M=(a,t,e,r)=>{for(var i=r>1?void 0:r?u(t,e):t,s=a.length-1,l;s>=0;s--)(l=a[s])&&(i=(r?l(t,e,i):l(i))||i);return r&&i&&v(t,e,i),i};const o=AFRAME.THREE;var c;let d=(c=class extends h{init(){this.el.addEventListener("object3dset",()=>{this.update()})}update(){const a=e=>{if(e instanceof o.Mesh){if(e.material instanceof o.Material)e.material.dispose();else for(const r of e.material)r.dispose();this.data.flat?e.material=new o.MeshBasicMaterial({color:new o.Color(this.data.color)}):e.material=new o.MeshStandardMaterial({color:new o.Color(this.data.color)})}},t=e=>{a(e);for(const r of e.children)t(r)};if(this.data.recursive)t(this.el.object3D);else for(const e in this.el.object3DMap){const r=this.el.object3DMap[e];a(r)}console.log("material overrdie init")}},n(c,"schema",{color:{default:"black"},flat:{default:!0},recursive:{default:!0}}),c);d=M([m("material-override")],d);export{d as MaterialOverrideComponent};
